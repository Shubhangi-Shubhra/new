Below is a very easy MuleSoft POC to understand:
✅ on-error-continue
✅ on-error-propagate
✅ error handling flow
No connectors download — simple core components only.

✅ Scenario


You send a request to HTTP listener /test


Inside flow, we force an error (division by zero)


Two examples:


CaseBehavioron-error-continueError handled → return custom success response to clienton-error-propagateError thrown → client receives error

✅ Example 1 — On Error Continue (Handle the error, don’t break flow)
✔️ Flow runs
✔️ Error happens
✔️ Mule catches & returns custom message
XML
<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <http:listener-config name="HTTP_Config" >
        <http:listener-connection host="0.0.0.0" port="8081"/>
    </http:listener-config>

    <flow name="error-continue-flow">
        <http:listener config-ref="HTTP_Config" path="/test-continue" />

        <!-- Force an error -->
        <set-payload value="#[1/0]" />

        <error-handler>
            <on-error-continue enableNotifications="true" logException="true">
                <set-payload value="Error handled successfully inside flow ✅"/>
            </on-error-continue>
        </error-handler>
    </flow>

</mule>

👉 Test
Open browser / Postman:
http://localhost:8081/test-continue

✅ Output
Error handled successfully inside flow ✅


✅ Example 2 — On Error Propagate (Throw error back to client)
❌ Flow fails
❌ Error propagates to client
✔️ You see real error in response
XML
<flow name="error-propagate-flow">
    <http:listener config-ref="HTTP_Config" path="/test-propagate" />

    <!-- Force error -->
    <set-payload value="#[1/0]" />

    <error-handler>
        <on-error-propagate enableNotifications="true" logException="true">
            <set-payload value="An error occurred and we propagated it ❌"/>
        </on-error-propagate>
    </error-handler>
</flow>

👉 Test
http://localhost:8081/test-propagate

❌ Output
Mule sends HTTP 500 error (propagated)

✅ When to Use?
Use CaseTypeYou want to stop flow and show real erroron-error-propagateYou want to handle inside flow & continueon-error-continue

🎯 Summary
Featureon-error-continueon-error-propagateFlow stops?❌✅Return custom msg?✅❌Client sees real error?❌✅

Want Bonus? 🎁
I can also share:


✅ Try–Catch example


✅ Global error handler version


✅ Logger + when condition error handling


✅ Real API integration error POC


Just reply: SEND ADVANCED ERROR HANDLING 🚀
