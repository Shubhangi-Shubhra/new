import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.interfaces.RSAPublicKey;
import java.util.Base64;

public class SimpleSSHKeyGenerator {

    public static void main(String[] args) {
        try {
            // Generate RSA key pair (2048-bit)
            KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
            keyGen.initialize(2048);
            KeyPair keyPair = keyGen.generateKeyPair();

            // Convert to PEM (Private Key)
            String privateKeyPEM = Base64.getEncoder().encodeToString(keyPair.getPrivate().getEncoded());
            privateKeyPEM = "-----BEGIN PRIVATE KEY-----\n" +
                            privateKeyPEM +
                            "\n-----END PRIVATE KEY-----";

            // Convert to SSH Public Key format
            RSAPublicKey pub = (RSAPublicKey) keyPair.getPublic();
            String publicKeyBase64 = Base64.getEncoder().encodeToString(pub.getEncoded());
            String publicKeySSH = "ssh-rsa " + publicKeyBase64 + " user@localhost";

            // Print both keys
            System.out.println("âœ… SSH Key Pair Generated Successfully!");
            System.out.println("\nPublic Key (add this to authorized_keys):\n" + publicKeySSH);
            System.out.println("\nPrivate Key (keep it safe):\n" + privateKeyPEM);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
